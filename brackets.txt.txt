#include<stdio.h>
#include<stdlib.h>
#include<string.h>
#define n 30

char stack[n]; int top;  //stack dizisi ve top degiskeni global olarak tanýmlandý.

void push(char x) {      
  if (top == (n - 1))    //top degeri max kapasiteye esit ise stack doludur ve push yapilamaz.
    printf("Stack Dolu. Ekleme yapilamaz...\n");
  else {
    top++;  // top 1 artýrýlýp
    stack[top] = x;  // stack'in yeni indisine x elemaný eklenir.
  }
}

void pop() {            
  if (top == -1) { 										// top degeri -1 e eþit ise stack bostur.
    printf("Stack bos. Cikarilacak eleman yok \n");
  } else {
    top = top - 1; 			// top 1 azaltýlýr ve pop islemi yapilmis olur.
  }
}

void ParantezKontrol(char ifade[]){   		// Parantez kontrolü için bu fonksiyona kullanýcýdan alýnan ifade gönderildi.
	int i, sayac = 0;
	for (i = 0; i < strlen(ifade); i++) {
    	if (ifade[i] == '(' || ifade[i] == '[' || ifade[i] == '{') {
      		push(ifade[i]);          // Acik parantez bulunursa bunu stack içine ekle.
			sayac++;				// push iþlemi sayac ile sayýlýyor. Eðer sayac artmýyorsa ifadede parantez bulunmamýþ demektir.
      		continue;
    	} else if (ifade[i] == ')' || ifade[i] == ']' || ifade[i] == '}') {       // kapanmis bir parantez cikmasi durumunda
    		if (stack[top] == '(' || stack[top] == '[' || stack[top] == '{') {   // stack içine giren son elemanda karþýlýk bulunursa.
          		pop();   // pop iþlemini yap. Yani bunlarý stack'ten çýkart.
        	} else {
          		printf("\nYanlis parantez kullanimi\n"); 
          		exit(1);
        	}
    	}
   }
   if (sayac == 0){        // sayac artmamýþsa stack içine parantez atýlmamýþ demektir. Parantez bulunamamýþtýr.
   	  printf(" HATA!!! Parantezli ifade girmediniz...\n");
   	  exit(1);
   }
   if (top == -1){ 									// Stack'in içi tamamen boþaltýlmýþ ise ifade doðrudur.
      printf("\nDogru parantez kullanimi...\n"); 
   }else{										   // Stack'in içinde hala parantezli eleman kaldýysa ifade hatalýdýr.
      printf("\nYanlis parantez kullanimi...\n");
  }
}

int main() {
  char ifade[n]; top = -1;
  printf("\nParantez iceren matematiksel ifadeyi giriniz :\n\n ");
  scanf("%s", ifade);
  ParantezKontrol(ifade);   
  return 0;
}